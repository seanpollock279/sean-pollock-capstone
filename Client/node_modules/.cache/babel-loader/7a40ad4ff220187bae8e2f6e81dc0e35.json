{"ast":null,"code":"import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Router from './Compoennts/Router/Router';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      locations: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/locations').then(res => {\n      this.setState({\n        locations: res.data\n      });\n    });\n  }\n\n} // function App() {\n//   return (\n//     <BrowserRouter>\n//       <Switch>\n//         <Route exact path=\"/\" render={() => <LandingPage/> }/>\n//         <Route path=\"/locations\" render={() => <MapPage /> }/>\n//         <Route path=\"/about\" render={() => <About /> }/>\n//         <Route path=\"/upload\" render={() => <Uploader /> }/>\n//       </Switch>\n//     </BrowserRouter>\n//   );\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/seanpollock/capstone/Client/src/App.js"],"names":["React","axios","Router","App","Component","state","locations","componentDidMount","get","then","res","setState","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE;AADL,KADwB;AAAA;;AAKlCC,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,KAAK,CAACO,GAAN,CAAU,YAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACT,WAAKC,QAAL,CAAc;AACVL,QAAAA,SAAS,EAAEI,GAAG,CAACE;AADL,OAAd;AAGH,KALL;AAMD;;AAZ+B,C,CAelC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Router from './Compoennts/Router/Router';\n\nclass App extends React.Component {\n  state = {\n    locations: []\n  }\n\ncomponentDidMount() {\n    axios.get('/locations')\n        .then(res => {\n            this.setState({\n                locations: res.data\n            })\n        })\n  }\n}\n\n// function App() {\n//   return (\n//     <BrowserRouter>\n//       <Switch>\n//         <Route exact path=\"/\" render={() => <LandingPage/> }/>\n//         <Route path=\"/locations\" render={() => <MapPage /> }/>\n//         <Route path=\"/about\" render={() => <About /> }/>\n//         <Route path=\"/upload\" render={() => <Uploader /> }/>\n//       </Switch>\n//     </BrowserRouter>\n//   );\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}