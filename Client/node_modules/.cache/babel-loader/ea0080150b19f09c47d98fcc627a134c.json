{"ast":null,"code":"var _jsxFileName = \"/Users/seanpollock/capstone/Client/src/Compoennts/MapPage/MapPage.jsx\";\nimport React, { useState } from 'react';\nimport LocationCard from '../LocationCard/LocationCard';\nimport Header from '../Header/Header';\nimport axios from 'axios';\nimport './mapPage.scss';\nimport SortBar from '../SortBar/SortBar';\nimport LocationFoot from '../LocationFoot/LocationFoot';\n\nfunction MapPage(props) {\n  let location = props.state.locations.locations; // const [sorted, setSorted] = useState();\n  // const [portraitList, setPortraitList] = useState();\n  // const sortPortraits = (event) => {\n  //     if (props.state.locations !== undefined) {\n  //         let newPortraitList = props.state.locations.locations.map(item => {\n  //             console.log(item.categories)\n  //             item.categories.map(cat => { \n  //             })\n  //             return newPortraitList;\n  //         })\n  //         console.log(newPortraitList)\n  //         // let newPortraitList = props.state.locations.locations.categories.filter(item => item === 'portraits')\n  //         setPortraitList(newPortraitList);\n  //         setSorted('portraits');\n  //     }\n  // }\n  // const [weddingList, setWeddingList] = useState();\n  // const sortWeddings = (event) => {\n  //     console.log('fired')\n  //     if (props.state.locations !== undefined) {\n  //         let newWeddingList = props.state.locations.filter(props.state.locations.categories.find('wedding'))\n  //         setPortraitList(newWeddingList);\n  //         setSorted('wedding');\n  //     }\n  // }\n  // const [lifestyleList, setLifestyleList] = useState();\n  // const sortLifestyle = (event) => {\n  //     console.log('fired')\n  //     if (props.state.locations !== undefined) {\n  //         let newLifestyleList = props.state.locations.filter(props.state.locations.categories.find('lifestyle'))\n  //         setLifestyleList(newLifestyleList);\n  //         setSorted('lifestyle');\n  //     }\n  // }\n  // const [engagementList, setEngagementList] = useState();\n  // const sortEngagements = (event) => {\n  //     console.log('fired')\n  //     if (props.state.locations !== undefined) {\n  //         let newEngagementList = props.state.locations.filter(props.state.locations.categories.find('engagements'))\n  //         setPortraitList(newEngagementList);\n  //         setSorted('engagements');\n  //     }\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SortBar, {\n    sortPortraits: sortPortraits,\n    sortEngagements: sortEngagements,\n    sortLifestyle: sortLifestyle,\n    sortWeddings: sortWeddings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, sorted === 'portraits' ? portraitList.map(item => /*#__PURE__*/React.createElement(LocationCard, {\n    location: item.location,\n    description: item.description,\n    img: item.img,\n    id: item.id,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })) : sorted === 'wedding' ? weddingList.map(item => /*#__PURE__*/React.createElement(LocationCard, {\n    location: item.location,\n    description: item.description,\n    img: item.img,\n    id: item.id,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })) : sorted === 'lifestyle' ? lifestyleList.map(item => /*#__PURE__*/React.createElement(LocationCard, {\n    location: item.location,\n    description: item.description,\n    img: item.img,\n    id: item.id,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })) : sorted === 'engagements' ? engagementList.map(item => /*#__PURE__*/React.createElement(LocationCard, {\n    location: item.location,\n    description: item.description,\n    img: item.img,\n    id: item.id,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })) : location.map(location => /*#__PURE__*/React.createElement(LocationCard, {\n    location: location.location,\n    description: location.description,\n    img: location.img,\n    id: location.id,\n    key: location.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(LocationFoot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }));\n} // for more info clicked through from a specific card it will change dynamic url to /locations/:id \n\n\nexport default MapPage;","map":{"version":3,"sources":["/Users/seanpollock/capstone/Client/src/Compoennts/MapPage/MapPage.jsx"],"names":["React","useState","LocationCard","Header","axios","SortBar","LocationFoot","MapPage","props","location","state","locations","sortPortraits","sortEngagements","sortLifestyle","sortWeddings","sorted","portraitList","map","item","description","img","id","weddingList","lifestyleList","engagementList"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport LocationCard from '../LocationCard/LocationCard';\nimport Header from '../Header/Header';\nimport axios from 'axios';\nimport './mapPage.scss';\nimport SortBar from '../SortBar/SortBar';\nimport LocationFoot from '../LocationFoot/LocationFoot';\n\nfunction MapPage (props) {\n    let location = props.state.locations.locations;\n\n    // const [sorted, setSorted] = useState();\n\n    // const [portraitList, setPortraitList] = useState();\n\n    \n\n    \n    // const sortPortraits = (event) => {\n        \n    //     if (props.state.locations !== undefined) {\n    //         let newPortraitList = props.state.locations.locations.map(item => {\n    //             console.log(item.categories)\n    //             item.categories.map(cat => { \n    //             })\n    //             return newPortraitList;\n    //         })\n    //         console.log(newPortraitList)\n    //         // let newPortraitList = props.state.locations.locations.categories.filter(item => item === 'portraits')\n    //         setPortraitList(newPortraitList);\n    //         setSorted('portraits');\n            \n    //     }\n    // }\n\n    // const [weddingList, setWeddingList] = useState();\n    // const sortWeddings = (event) => {\n    //     console.log('fired')\n    //     if (props.state.locations !== undefined) {\n    //         let newWeddingList = props.state.locations.filter(props.state.locations.categories.find('wedding'))\n    //         setPortraitList(newWeddingList);\n    //         setSorted('wedding');\n    //     }\n    // }\n\n    // const [lifestyleList, setLifestyleList] = useState();\n    // const sortLifestyle = (event) => {\n    //     console.log('fired')\n    //     if (props.state.locations !== undefined) {\n    //         let newLifestyleList = props.state.locations.filter(props.state.locations.categories.find('lifestyle'))\n    //         setLifestyleList(newLifestyleList);\n    //         setSorted('lifestyle');\n    //     }\n    // }\n\n    // const [engagementList, setEngagementList] = useState();\n    // const sortEngagements = (event) => {\n    //     console.log('fired')\n    //     if (props.state.locations !== undefined) {\n    //         let newEngagementList = props.state.locations.filter(props.state.locations.categories.find('engagements'))\n    //         setPortraitList(newEngagementList);\n    //         setSorted('engagements');\n    //     }\n    // }\n\n    return (\n        <>\n            <Header />\n            <SortBar sortPortraits={sortPortraits} sortEngagements={sortEngagements} sortLifestyle={sortLifestyle} sortWeddings={sortWeddings}/>\n            <div className=\"Cards\">\n                {/* {location.map(location => \n                    <LocationCard \n                    location={location.location}\n                    description={location.description}\n                    img={location.img}\n                    id={location.id}\n                    key={location.id}\n                    />\n                )} */}\n            \n                {sorted === 'portraits' ? portraitList.map(item => \n                <LocationCard \n                location={item.location}\n                description={item.description}\n                img={item.img}\n                id={item.id}\n                key={item.id} />) : sorted === 'wedding' ? weddingList.map(item => \n                <LocationCard \n                location={item.location}\n                description={item.description}\n                img={item.img}\n                id={item.id}\n                key={item.id} />) : sorted === 'lifestyle' ? lifestyleList.map(item => \n                <LocationCard \n                location={item.location}\n                description={item.description}\n                img={item.img}\n                id={item.id}\n                key={item.id} />) : sorted === 'engagements' ? engagementList.map(item => \n                <LocationCard \n                location={item.location}\n                description={item.description}\n                img={item.img}\n                id={item.id}\n                key={item.id} />) : location.map(location => \n                    <LocationCard \n                    location={location.location}\n                    description={location.description}\n                    img={location.img}\n                    id={location.id}\n                    key={location.id}\n                    />\n                )}\n            </div>\n            <LocationFoot />\n        </>\n    )\n}\n\n    // for more info clicked through from a specific card it will change dynamic url to /locations/:id \n\nexport default MapPage;"]},"metadata":{},"sourceType":"module"}