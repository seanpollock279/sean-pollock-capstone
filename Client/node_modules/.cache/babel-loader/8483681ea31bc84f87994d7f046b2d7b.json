{"ast":null,"code":"var _jsxFileName = \"/Users/seanpollock/capstone/Client/src/Compoennts/SignUp/SignUp.jsx\";\nimport React, { useRef, useState } from 'react';\nimport { useAuth } from '../../Contexts/AuthContexts';\nimport { Link, useHistory } from 'react-router-dom';\nimport '../SignUp/signup.scss';\nimport SignInHeader from '../SignInHeader/SignInHeader';\nexport default function SignUp() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef(); // const { signUp, currentUser } = useAuth();\n\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // if (passwordRef.current.value !== \n    // passwordConfirmRef.current.value) {\n    //     return setError('Passwords do not match');\n    // }\n    // try {\n    //     setError('')\n    //     setLoading(true)\n    //     await signUp(emailRef.current.value, passwordRef.current.value)\n    //     history.push('/');\n    // } catch {\n    //     setError(\"Failed to create an account\")\n    // } \n    // setLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SignInHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signUp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"signUp__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signUp__group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    ref: emailRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    ref: passwordRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Password Confirmation\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    ref: passwordConfirmRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 42\n    }\n  }, \"Log In\"))));\n}","map":{"version":3,"sources":["/Users/seanpollock/capstone/Client/src/Compoennts/SignUp/SignUp.jsx"],"names":["React","useRef","useState","useAuth","Link","useHistory","SignInHeader","SignUp","emailRef","passwordRef","passwordConfirmRef","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAO,uBAAP;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAMC,QAAQ,GAAGP,MAAM,EAAvB;AACA,QAAMQ,WAAW,GAAGR,MAAM,EAA1B;AACA,QAAMS,kBAAkB,GAAGT,MAAM,EAAjC,CAH6B,CAI7B;;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMa,OAAO,GAAGV,UAAU,EAA1B;;AAEA,iBAAeW,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF,GAD2B,CAG3B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACH;;AAED,sBACI,uDACA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,GAAG,EAAEV,QAAzB;AAAmC,IAAA,QAAQ,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEC,WAA5B;AAAyC,IAAA,QAAQ,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEC,kBAA5B;AAAgD,IAAA,QAAQ,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbJ,CADJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC6B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD7B,CAhBJ,CAFA,CADJ;AAyBH","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useAuth } from '../../Contexts/AuthContexts';\nimport { Link, useHistory } from 'react-router-dom';\nimport '../SignUp/signup.scss';\nimport SignInHeader from '../SignInHeader/SignInHeader';\n\nexport default function SignUp() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    // const { signUp, currentUser } = useAuth();\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        // if (passwordRef.current.value !== \n        // passwordConfirmRef.current.value) {\n        //     return setError('Passwords do not match');\n        // }\n\n        // try {\n        //     setError('')\n        //     setLoading(true)\n        //     await signUp(emailRef.current.value, passwordRef.current.value)\n        //     history.push('/');\n        // } catch {\n        //     setError(\"Failed to create an account\")\n        // } \n\n        // setLoading(false);\n    }\n\n    return (\n        <>\n        <SignInHeader />\n        <div className=\"signUp\">\n            <form className=\"signUp__form\">\n                <div className=\"signUp__group\">\n                    <label htmlFor=\"\">Email</label>\n                    <input type=\"email\" ref={emailRef} required></input>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Password</label>\n                    <input type=\"password\" ref={passwordRef} required></input>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Password Confirmation</label>\n                    <input type=\"password\" ref={passwordConfirmRef} required></input>\n                </div>\n                <button>Sign Up</button>\n            </form>\n            <div>\n                Already have an account? <Link to=\"/login\">Log In</Link>\n            </div>\n        </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}